# Nginx configuration for React SPA routing
# Place this in your server block or use as a reference for your nginx configuration

server {
    listen 80;
    server_name your-domain.com;  # Replace with your domain
    root /var/www/html;  # Replace with your app's build directory
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Handle static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|pdf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle manifest.json and other JSON files
    location ~* \.json$ {
        add_header Cache-Control "no-cache";
        try_files $uri =404;
    }

    # Handle robots.txt and sitemap.xml
    location ~* \.(txt|xml)$ {
        add_header Cache-Control "no-cache";
        try_files $uri =404;
    }

    # API routes (if you have any backend API)
    location /api/ {
        # Proxy to your backend API server
        # proxy_pass http://localhost:3001;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        try_files $uri $uri/ =404;
    }

    # Handle React Router (SPA) - This is the key configuration
    location / {
        try_files $uri $uri/ /index.html;
        
        # Disable cache for index.html to ensure users get the latest version
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # Error pages
    error_page 404 /index.html;
    error_page 403 /index.html;
    error_page 500 502 503 504 /index.html;
}

# HTTPS configuration (recommended for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     root /var/www/html;
#     index index.html;
#
#     # SSL configuration
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # Include the same location blocks as above
# }

# Redirect HTTP to HTTPS (for production)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
